plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    namespace 'com.practice.view_system_practice'
    compileSdk 33

    defaultConfig {
        applicationId "com.practice.view_system_practice"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // add the directory of schema location under defaultConfig
        // database의 exportSchema는 true로 되어야 함에 유의(기본값이 true)

        // write as "annotation processor arguments"
        // to preserve the schema in the specific directory
        // key : room.schemaLocation / value : directory name
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }

        buildConfigField("String", "API_KEY", "\"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4MWQyMzY4YWYyYTFmMGNjNWViN2FiYzI0ZTUyMTgwNiIsInN1YiI6IjY1NWExOGVhMDgxNmM3MDBlMDFiOGFiOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.GW9SaUykdRWyU91jiSMGbDvaRu45MERw9MxLyxdJvRQ\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    dataBinding {
        enabled = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    def lifecycle_version = "2.5.1"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    implementation 'androidx.activity:activity-ktx:1.3.1'
    implementation 'androidx.fragment:fragment-ktx:1.3.1'

    // livedata
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    def nav_version = "2.5.3"

    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"


    def room_version = "2.5.0"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    // To use Kotlin Symbol Processing (KSP)

    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3"

    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.11.0"

    implementation "androidx.work:work-runtime-ktx:2.8.0"

    testImplementation "androidx.arch.core:core-testing:2.2.0"
    testImplementation "com.google.truth:truth:1.0.1"
    testImplementation "com.google.truth.extensions:truth-java8-extension:1.1.4"

    testImplementation "org.mockito:mockito-core:3.12.4"

    implementation 'com.google.dagger:dagger:2.47'
    kapt 'com.google.dagger:dagger-compiler:2.47'

    implementation 'com.github.bumptech.glide:glide:4.16.0'
    kapt "com.github.bumtech.glide:compiler:4.16.0"

}